<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="com.google.firebase.auth.UserRecord.CreateRequest"/>
    <fullyQualifiedTypeName name="com.google.rpc.PreconditionFailure.Violation"/>
    <fullyQualifiedTypeName name="jakarta.validation.ConstraintValidatorFactory"/>
    <fullyQualifiedTypeName name="com.google.firebase.database.utilities.Validation"/>
    <fullyQualifiedTypeName name="jakarta.validation.ValidatorFactory"/>
    <fullyQualifiedTypeName name="jakarta.validation.Validation"/>
    <fullyQualifiedTypeName name="jakarta.validation.Validator"/>
    <fullyQualifiedTypeName name="java.util.Set"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.GrantedAuthority"/>
    <fullyQualifiedTypeName name="org.springframework.security.jackson2.SimpleGrantedAuthorityMixin"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.authority.SimpleGrantedAuthority"/>
    <fullyQualifiedTypeName name="java.util.Collection"/>
    <fullyQualifiedTypeName name="java.util.Collections"/>
    <fullyQualifiedTypeName name="org.apache.commons.logging.Log"/>
    <fullyQualifiedTypeName name="jakarta.transaction.Transactional"/>
    <fullyQualifiedTypeName name="repositories.HospitalRepository"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatusCode"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="dtos.responses.PatientResponseDTO"/>
    <fullyQualifiedTypeName name="jakarta.persistence.EntityNotFoundException"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
    <fullyQualifiedTypeName name="exceptions.HospitalNotFoundException"/>
    <fullyQualifiedTypeName name="org.mockito.junit.jupiter.MockitoExtension"/>
    <fullyQualifiedTypeName name="model.enums.Gender"/>
    <fullyQualifiedTypeName name="model.enums.NationalityType"/>
    <fullyQualifiedTypeName name="java.math.BigDecimal"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.Test"/>
    <fullyQualifiedTypeName name="model.entities.Address"/>
    <fullyQualifiedTypeName name="dtos.creations.AddressCreationDTO"/>
    <fullyQualifiedTypeName name="org.springframework.test.util.ReflectionTestUtils"/>
    <fullyQualifiedTypeName name="jakarta.validation.constraints.NotEmpty"/>
    <fullyQualifiedTypeName name="com.google.firebase.database.annotations.NotNull"/>
    <fullyQualifiedTypeName name="java.time.LocalDate"/>
    <fullyQualifiedTypeName name="jakarta.validation.constraints.NotBlank"/>
    <fullyQualifiedTypeName name="jakarta.validation.constraints.Email"/>
    <fullyQualifiedTypeName name="dtos.updates.responses.PatientUpdateResponseDTO"/>
    <fullyQualifiedTypeName name="dtos.updates.responses.PersonUpdateResponseDTO"/>
    <fullyQualifiedTypeName name="dtos.responses.AddressResponseDTO"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.DisplayName"/>
    <fullyQualifiedTypeName name="repositories.PatientRepository"/>
    <fullyQualifiedTypeName name="exceptions.PersonNotFoundException"/>
    <fullyQualifiedTypeName name="java.lang.annotation.Target"/>
    <fullyQualifiedTypeName name="java.lang.annotation.ElementType"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.context.SecurityContextHolder"/>
    <fullyQualifiedTypeName name="java.lang.reflect.Method"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="org.springframework.security.access.prepost.PreAuthorize"/>
    <fullyQualifiedTypeName name="com.google.firebase.auth.FirebaseAuthException"/>
    <fullyQualifiedTypeName name="model.enums.RoleType"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="model.entities.Doctor"/>
    <fullyQualifiedTypeName name="dtos.creations.DoctorCreationDTO"/>
    <fullyQualifiedTypeName name="dtos.creations.UserCreationDTO"/>
    <fullyQualifiedTypeName name="testSecurityConfig.TestSecurityConfiguration"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.Authentication"/>
    <fullyQualifiedTypeName name="com.mysql.cj.protocol.AuthenticationProvider"/>
    <fullyQualifiedTypeName name="java.util.List"/>
</qualifiedTypeNameHistroy>
