<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="dtos.ResponseNurseDTO"/>
    <fullyQualifiedTypeName name="dtos.ResponseAdministratorDTO"/>
    <fullyQualifiedTypeName name="dtos.responses.AddressResponseDTO"/>
    <fullyQualifiedTypeName name="model.entities.Address"/>
    <fullyQualifiedTypeName name="dtos.responses.HospitalResponseDTO"/>
    <fullyQualifiedTypeName name="dtos.responses.HospitalSelectionDTO"/>
    <fullyQualifiedTypeName name="java.io.Serializable"/>
    <fullyQualifiedTypeName name="java.util.Collections"/>
    <fullyQualifiedTypeName name="dtos.responses.EmployeeSelectionDTO"/>
    <fullyQualifiedTypeName name="jakarta.validation.constraints.NotEmpty"/>
    <fullyQualifiedTypeName name="jakarta.validation.ConstraintValidator"/>
    <fullyQualifiedTypeName name="validation.MedicationUserValidator"/>
    <fullyQualifiedTypeName name="validation.annotations.MedicationUserValidation"/>
    <fullyQualifiedTypeName name="dtos.responses.selection.SchedulePatientSelectionDTO"/>
    <fullyQualifiedTypeName name="model.enums.ScheduleType"/>
    <fullyQualifiedTypeName name="model.enums.PaySheetStatus"/>
    <fullyQualifiedTypeName name="dtos.responses.PaySheetResponseDTO"/>
    <fullyQualifiedTypeName name="dtos.responses.MedicalExamDTO"/>
    <fullyQualifiedTypeName name="dtos.responses.MedicalRecordResponseDTO"/>
    <fullyQualifiedTypeName name="java.util.Set"/>
    <fullyQualifiedTypeName name="dtos.responses.PrescriptionResponseDTO"/>
    <fullyQualifiedTypeName name="java.io.FileInputStream"/>
    <fullyQualifiedTypeName name="com.google.firebase.FirebaseException"/>
    <fullyQualifiedTypeName name="com.google.firebase.FirebaseOptions"/>
    <fullyQualifiedTypeName name="com.google.auth.oauth2.GoogleCredentials"/>
    <fullyQualifiedTypeName name="com.google.firebase.FirebaseApp"/>
    <fullyQualifiedTypeName name="jakarta.servlet.http.HttpServletResponse"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="model.enums.RoleType"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.authority.SimpleGrantedAuthority"/>
    <fullyQualifiedTypeName name="security.firebase.FirebaseAuthenticationFilter"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.UsernamePasswordAuthenticationToken"/>
    <fullyQualifiedTypeName name="com.google.firebase.auth.UserRecord"/>
    <fullyQualifiedTypeName name="com.google.firebase.auth.UserRecord.CreateRequest"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="jakarta.validation.constraints.NotNull"/>
    <fullyQualifiedTypeName name="java.nio.file.AccessDeniedException"/>
    <fullyQualifiedTypeName name="org.springframework.security.access.AccessDeniedException"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="repositories.GeneralRepository"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="org.springframework.data.repository.NoRepositoryBean"/>
    <fullyQualifiedTypeName name="dtos.responses.UserResponseDTO"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatusCode"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="java.lang.Throwable"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ExceptionHandler"/>
    <fullyQualifiedTypeName name="model.entities.User"/>
    <fullyQualifiedTypeName name="com.google.firebase.auth.UserRecord.UpdateRequest"/>
    <fullyQualifiedTypeName name="jakarta.validation.constraints.NotBlank"/>
    <fullyQualifiedTypeName name="jakarta.validation.constraints.Pattern"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="java.lang.IllegalArgumentException"/>
    <fullyQualifiedTypeName name="com.google.rpc.context.AttributeContext.Auth"/>
    <fullyQualifiedTypeName name="com.google.firebase.auth.FirebaseAuth"/>
    <fullyQualifiedTypeName name="jakarta.transaction.Transactional"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.context.SecurityContextHolder"/>
    <fullyQualifiedTypeName name="org.springframework.security.access.prepost.PreAuthorize"/>
    <fullyQualifiedTypeName name="com.google.firebase.auth.FirebaseAuthException"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UsernameNotFoundException"/>
</qualifiedTypeNameHistroy>
