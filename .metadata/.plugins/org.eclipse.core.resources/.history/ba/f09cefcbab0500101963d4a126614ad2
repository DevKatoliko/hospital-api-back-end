package model.entities;

import java.math.BigDecimal;
import java.time.LocalDate;

import jakarta.persistence.Entity;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.OneToOne;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Digits;
import model.enums.Gender;
@Entity
@Table(name= "Employees")
public abstract class Employee extends Person{
	@Digits(integer = 10, fraction = 2)
	private BigDecimal salary;
	@OneToOne
	@JoinColumn(name="paySheet_id", referencedColumnName = "id", nullable=false)
	private PaySheet paySheet;
	
	protected Employee() {
		super();
	}
	public Employee(String name,String lastName,Gender gender,String cpf,LocalDate birthDate,String telephoneNumber,
			String cellphoneNumber,String email,	Address address, Hospital hospital,BigDecimal salary,PaySheet paySheet) {
		super(cellphoneNumber, cellphoneNumber, gender, cellphoneNumber, birthDate, cellphoneNumber, cellphoneNumber, cellphoneNumber, address, hospital);
		if(salary.compareTo(BigDecimal.ZERO) <= 0) {
			throw new IllegalArgumentException("O valor do salÃ¡rio deve ser positivo e maior do que zero");
		}
		this.salary = salary;
		this.paySheet = paySheet;
	}	
	
	
	
	
	
	public BigDecimal getSalary() {
		return salary;
	}
	public void setSalary(BigDecimal salary) {
		this.salary = salary;
	}
	public PaySheet getPaysheet() {
		return paySheet;
	}
	public void setPaysheet(PaySheet paysheet) {
		this.paySheet = paysheet;
	}
	
}
