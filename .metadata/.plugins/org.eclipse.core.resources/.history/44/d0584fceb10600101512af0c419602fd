package model.entities;

import java.util.List;

import jakarta.persistence.CollectionTable;
import jakarta.persistence.Column;
import jakarta.persistence.ElementCollection;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.OneToOne;
import jakarta.persistence.Table;
import model.enums.BloodType;
@Entity
@Table(name= "medical_history_records")
public class MedicalHistory {
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;
	private double weight;
	private double height;
	private BloodType bloodType;// Enum com os tipos sangu√≠neos
	private boolean smoker;
	private boolean drinkAlcohol;
	private boolean practicesPhysicalExercise;
	private boolean usesMedicine;
	@ElementCollection
	@CollectionTable(name="patients_medicines_information", joinColumns = @JoinColumn(name = "patient_id"))
	@Column(name="medicines")
	private List<String> medicinesUsedInformation;
	@Column(name="family_health_history")
	private String familyHealthHistory; //  Information about the patient's family health history
	@Column(name="patient_health_history")
	private String patientHealthHistory; // Information about the health condition of the patient
	@ElementCollection
	@CollectionTable(name = "surgeries_history", joinColumns = @JoinColumn(name= "patient_id"))
	@Column(name="surgeries")
	private List<String> surgeriesHistory;
	@ElementCollection
	@CollectionTable(name="patients_chronic_diseases_information", joinColumns = @JoinColumn(name = "patient_id"))
	@Column(name="chronic_diseases")
	private List<String> chronicDiseasesInformation;
	@ElementCollection
	@CollectionTable(name="patients_symptoms", joinColumns = @JoinColumn(name = "patient_id"))
	@Column(name="symptoms")
	private List<String> patientSymptoms;
	@ElementCollection
	@CollectionTable(name="patients_diagnostics", joinColumns = @JoinColumn(name = "patient_id"))
	@Column(name="diagnostics")
	private List<String> diagnostics;
	@ElementCollection
	@CollectionTable(name="patients_hospitalizations", joinColumns = @JoinColumn(name = "patient_id"))
	@Column(name="hospitalizations")
	private List<String> hospitalizations;
	@OneToOne
	@JoinColumn(name="patient", referencedColumnName = "id", nullable = false)
	private Patient patient;
}
