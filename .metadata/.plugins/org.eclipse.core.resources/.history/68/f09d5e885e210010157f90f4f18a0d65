package services;

import org.springframework.stereotype.Service;

import dtos.creations.PatientCreationDTO;
import dtos.creations.PersonCreationDTO;
import dtos.responses.PatientResponseDTO;
import jakarta.transaction.Transactional;
import model.entities.Address;
import model.entities.Hospital;
import model.entities.Patient;
import repositories.HospitalRepository;
import repositories.PatientRepository;

@Service
public class PatientService {
	private final PatientRepository patientRepository;
	private final HospitalRepository hospitalRepository;
	
	public PatientService(PatientRepository patientRepository, HospitalRepository hospitalRepository) {
			this.patientRepository = patientRepository;
			this.hospitalRepository = hospitalRepository;
	}
	
	@Transactional
	public PatientResponseDTO createPatient(PatientCreationDTO patientDTO, PersonCreationDTO personDTO) {
		
		return null;
	}
	
	private Patient patientCreationDTOToPatientEntity(PatientCreationDTO patientDTO, PersonCreationDTO personDTO) {
		
		Hospital hospital = hospitalRepository.getReferenceById(personDTO.hospitalId());
		
		var address = new Address(
				personDTO.address().city(),
				personDTO.address().state(),
				personDTO.address().streetName(),
				personDTO.address().neighborhood(),
				personDTO.address().number(),
				personDTO.address().zipCode(),
				personDTO.address().complement());
		
		var patient = new Patient(
				personDTO.name(),
				personDTO.lastName(),
				personDTO.gender(),
				personDTO.cpf(),
				personDTO.birthDate(),
				personDTO.telephoneNumber(),
				personDTO.cellphoneNumber(),
				personDTO.email(),
				address,
				personDTO.nationality(),
				hospital,
				patientDTO.profession(),
				patientDTO.mothersName());
	
		return patient;
	}
	
}
