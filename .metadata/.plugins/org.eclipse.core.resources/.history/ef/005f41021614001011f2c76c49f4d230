package controllers;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.google.firebase.auth.FirebaseAuthException;

import dtos.creations.UserCreationDTO;
import dtos.responses.UserResponseDTO;
import jakarta.validation.Valid;
import model.entities.User;
import services.UserService;

@RestController
@RequestMapping("/auth")
public class UserController {
	private final UserService userService;
	
	public UserController(UserService userService) {
		this.userService = userService;
	}

	@PostMapping("/register/patient")
	public ResponseEntity<UserResponseDTO> registerPatient (@RequestBody @Valid UserCreationDTO userDTO) throws GlobalExceptionHandler{
		
		User patientUser = userService.registerUserPatient(userDTO);
		
		return ResponseEntity.status(HttpStatus.CREATED).body(UserResponseDTO.fromUser(patientUser));
	}
}
