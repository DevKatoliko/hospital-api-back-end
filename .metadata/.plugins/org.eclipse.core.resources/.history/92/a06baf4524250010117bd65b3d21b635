package services;

import org.springframework.stereotype.Service;

import dtos.creations.PatientCreationDTO;
import dtos.creations.PersonCreationDTO;
import dtos.responses.PatientResponseDTO;
import jakarta.transaction.Transactional;
import model.entities.Address;
import model.entities.Hospital;
import model.entities.Patient;
import repositories.HospitalRepository;
import repositories.PatientRepository;

@Service
public class PatientService {
	private final PatientRepository patientRepository;
	private final HospitalRepository hospitalRepository;
	
	public PatientService(PatientRepository patientRepository, HospitalRepository hospitalRepository) {
			this.patientRepository = patientRepository;
			this.hospitalRepository = hospitalRepository;
	}
	
	@Transactional
	public PatientResponseDTO createPatient(PatientCreationDTO patientDTO) {
		Patient patient = patientCreationDTOToPatientEntity(patientDTO);
		var patientResponseDTO = PatientResponseDTO.fromPatient(patient);
		patientRepository.save(patient);
		return patientResponseDTO;
	}
	
	private Patient patientCreationDTOToPatientEntity(PatientCreationDTO patientDTO) {
		Hospital hospital = hospitalRepository.getReferenceById(patientDTO.personDTO().hospitalId());
		Hospital.verifyHospital(hospital);
		Address address = Address.convertFromDTO(patientDTO.personDTO().addressDTO());
		
		var patient = new Patient(
				patientDTO.personDTO().name(),
				patientDTO.personDTO().lastName(),
				patientDTO.personDTO().gender(),
				patientDTO.personDTO().cpf(),
				patientDTO.personDTO().birthDate(),
				patientDTO.personDTO().telephoneNumber(),
				patientDTO.personDTO().cellphoneNumber(),
				patientDTO.personDTO().email(),
				address,
				patientDTO.personDTO().nationality(),
				hospital,
				patientDTO.profession(),
				patientDTO.mothersName());
	
		return patient;
	}
	
}
